# Dump and fetch a database

- hosts: "{{ idr_environment | default('idr') }}-database-hosts"
  tasks:

  - name: Get archive prefix
    set_fact:
      decommission_archive_prefix: "{{ ansible_hostname }}-{{ ansible_date_time.date | replace('-', '') }}"

  # postgresql_db dump is not idempotent
  - name: Check if gzipped dump exists
    stat:
      path: /tmp/{{ decommission_archive_prefix }}-database-{{ item.name }}.pg_dump.gz
    with_items:
    - "{{ postgresql_databases }}"
    register: database_pgdump_st

  - name: Create dump directory
    become: yes
    become_user: postgres
    file:
      path: /tmp/{{ decommission_archive_prefix }}-database-{{ item.item.name }}.pg_dump
      state: directory
      mode: 0755
    when: not item.stat.exists
    with_items:
      - "{{ database_pgdump_st.results }}"

  - name: Dump database (parallel)
    become: yes
    become_user: postgres
    postgresql_db:
      name: "{{ item.item.name }}"
      state: dump
      target: ''
      target_opts: "-Fd -j 8 --exclude-table-data password --exclude-table-data eventlog -f /tmp/{{ decommission_archive_prefix }}-database-{{ item.item.name }}.pg_dump"
    when: not item.stat.exists
    with_items:
    - "{{ database_pgdump_st.results }}"

  - name: Archive database
    become: yes
    become_user: postgres
    archive:
      path: /tmp/{{ decommission_archive_prefix }}-database-{{ item.item.name }}.pg_dump
      dest: /tmp/{{ decommission_archive_prefix }}-database-{{ item.item.name }}.pg_dump.gz
      remove: yes
    when: not item.stat.exists
    with_items:
    - "{{ database_pgdump_st.results }}"

  - name: Fetch database dumps
    fetch:
      dest: /tmp/
      flat: yes
      src: /tmp/{{ decommission_archive_prefix }}-database-{{ item.name }}.pg_dump.gz
    with_items:
    - "{{ postgresql_databases }}"
    when: 'download_dump | default(False)'

  - name: Print dump information
    debug:
      msg: >
        Archived database {{ ansible_hostname }}:{{ item.name }}
        to {{ decommission_archive_prefix }}-database-{{ item.name }}.pg_dump.gz
    with_items:
    - "{{ postgresql_databases }}"
