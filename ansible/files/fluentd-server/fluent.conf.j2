###########################################################################
# Receive TCP logs.
###########################################################################

# TODO: Secure with client/server SSL certs
<source>
  @type forward
  @id   input1
  port  24224
  <security>
    self_hostname {{ ansible_hostname }}
    shared_key {{ fluentd_shared_key }}
  </security>
</source>

# For debugging only
#<filter **>
#  @type stdout
#</filter>


###########################################################################
# Store logs
# WARNING: OMERO logs will take up a lot of space!
###########################################################################

<label @STORE_LOGS>
  <match **>
    @type file
    path /data/fluentd/aggregated
    symlink_path /data/fluentd/current.log
    append true
    compress gzip
    <buffer>
      # Aggregated logs rotated daily
      timekey 1d
      timekey_use_utc true
    </buffer>
  </match>
</label>


###########################################################################
# Send to Elasticsearch
###########################################################################

<label @ELASTICSEARCH>
  <match **>
    @type elasticsearch
    logstash_format true
    host "{{ fluentd_elasticsearch_host }}"
    port 9200
    include_tag_key true
    tag_key @log_name
    flush_interval 10s
  </match>
</label>


###########################################################################
# nginx-proxy
###########################################################################

# In future more log routes can be added
<match nginx.**>
  @type copy
  <store>
    @type relabel
    @label @STORE_LOGS
  </store>
  <store>
    @type relabel
    @label @ELASTICSEARCH
  </store>
  <store>
    @type relabel
    @label @NGINX_NOTIFICATION
  </store>
</match>

# Notify 5XX and all error logs apart from known warnings
<label @NGINX_NOTIFICATION>
  <filter nginx.access>
    @type grep
    <regexp>
      key code
      pattern ^5\d\d$
    </regexp>
  </filter>
  <filter nginx.access>
    @type record_transformer
    enable_ruby true
    <record>
      message ${record.to_json}
    </record>
  </filter>
  <filter nginx.error>
    @type grep
    <exclude>
      key message
      pattern (buffered to a temporary file)
    </exclude>
  </filter>

  <match nginx.*>
    @type slack
    token "{{ fluentd_slack_token }}"
    username fluentd-nginx
    icon_emoji :warning:
    channel "{{ fluentd_slack_channel }}"
    message ":warning: *%s* %s _%s_ @here
```
%s
```
"
    message_keys tag,hostname,time,message
    flush_interval 5s
  </match>
</label>


###########################################################################
# omero
###########################################################################

# In future more log routes can be added
<match omero.**>
  @type copy
  <store>
    @type relabel
    @label @STORE_LOGS
  </store>
  <store>
    @type relabel
    @label @ELASTICSEARCH
  </store>
  <store>
    @type relabel
    @label @OMERO_NOTIFICATION
  </store>
</match>

# Send slack notifications for error and critical
# Exclude known errors
<label @OMERO_NOTIFICATION>
  <filter omero.**>
    @type grep
    <regexp>
      key level
      pattern ^(error|critical)
    </regexp>
    <exclude>
      key message
      pattern ^(Failed during repository takeover|Method interface .+ invocation took)
    </exclude>
  </filter>

  <filter omero.**>
    @type record_transformer
    enable_ruby
    <record>
      # Limit message length
      message "${record['message'][0, 1024] + (record['message'].length > 1024 ? ' ...' : '')}"
    </record>
  </filter>

  <match omero.**>
    @type slack
    token "{{ fluentd_slack_token }}"
    username fluentd-omero
    icon_emoji :warning:
    channel "{{ fluentd_slack_channel }}"
    message ":warning: *%s* %s %s @here
```
%s
```
"
    message_keys tag,hostname,time,message
    time_format %F %T.%L
    flush_interval 5s
  </match>
</label>
