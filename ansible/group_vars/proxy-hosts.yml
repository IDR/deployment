# Parameters for the front-end IDR web proxy
# This includes OMERO.web and Jupyter

######################################################################
# Maintenance flag and URI
omero_maintenance_flag: /srv/www/omero-maintenance.flag
omero_maintenance_uri: /about/omero-maintenance.html


######################################################################
# nginx and SSL

# The stable line is now 1.12
nginx_stable_repo: True

nginx_proxy_worker_processes: 4
nginx_proxy_buffers: 32 16k

nginx_proxy_ssl: True
nginx_proxy_ssl_certificate: /etc/ssl/localcerts/bundled.crt
nginx_proxy_ssl_certificate_key: /etc/ssl/localcerts/server.key
nginx_proxy_http2: True


######################################################################
# OMERO.web proxy

nginx_proxy_log_format: main_timed_cache_upstream

nginx_proxy_websockets_enable: True

nginx_proxy_upstream_servers:
- name: omeroreadonly
  balance: ip_hash
  servers: "{{ omero_omeroreadonly_hosts_reserved | sort }}"
- name: omeroreadonlywebsockets
  balance: ip_hash
  servers: "{{ omero_omeroreadonly_hosts_external | map('regex_replace', '^(.*)$', '\\1:4065') | sort }}"
- name: omeroreadwrite
  servers: "{{ omero_omeroreadwrite_hosts }}"

# The regex is getting complicated, so unroll it into a list and join
_nginx_proxy_omero_locations:
- /webclient/metadata_*
- /webclient/render_*
- /webclient/get_thumbnail*
- /webgateway/metadata_*
- /webgateway/render_*
- /webgateway/get_thumbnail*
- /webclient/api/*
- /webclient/search/*
- /api/*
# /mapr/* is handled separately due to timeouts
- /webclient/img_detail/*
- /iviewer/*
- /figure/*
# Gallery is hosted at /
- /gallery-api/*

_nginx_proxy_backends_omero:
- name: omerocached
  location: ~ {{ _nginx_proxy_omero_locations | join('|') }}
  server: http://omeroreadonly
  cache_validity: 1d
  maintenance_flag: "{{ omero_maintenance_flag }}"
  maintenance_uri: "{{ omero_maintenance_uri }}"
- name: omeromapr
  location: ~ /mapr/*
  server: http://omeroreadonly
  cache_validity: 180d
  maintenance_flag: "{{ omero_maintenance_flag }}"
  maintenance_uri: "{{ omero_maintenance_uri }}"
- name: omerostatic
  location: ~ /static/*
  server: http://omeroreadonly
  cache_validity: 1d
- name: omero
  location: /
  server: http://omeroreadonly
  maintenance_flag: "{{ omero_maintenance_flag }}"
  maintenance_uri: "{{ omero_maintenance_uri }}"

_nginx_proxy_backends_omerowebsockets:
- name: omerowebsockets
  location: = /omero-ws
  server: http://omeroreadonlywebsockets
  websockets: True
  websocketsonly: True
  read_timeout: 86400

_nginx_proxy_backends_grafana_render:
- name: grafanarender
  location: "^~ /grafana/"
  server: "http://{{ management_host_ansible | default('localhost') }}:3000/render/dashboard/db/"
  cache_validity: 1m

_nginx_proxy_backends_prometheus_federate:
- name: prometheusfederate
  location: "^~ /prometheus/federate"
  server: "http://{{ management_host_ansible | default('localhost') }}:9090/federate"
  cache_validity: 15s

nginx_proxy_backends: >
  {{ _nginx_proxy_backends_omero +
     _nginx_proxy_backends_omerowebsockets +
     _nginx_proxy_backends_grafana_render +
     _nginx_proxy_backends_prometheus_federate
  }}


# The config generated by omero web wsgi contains X-Forwarded-Proto
# Override it in the front-end proxy by setting a different header
nginx_proxy_forward_scheme_header: X-Forwarded-Proto-Omero-Web


######################################################################
# OMERO.web proxy and caching

nginx_proxy_cachebuster_port: 9000
nginx_proxy_cachebuster_enabled: False

# Cache the request path but not the host so that cache can be copied to
# other servers
# Ignore the `_=\d+` query parameter
nginx_proxy_cache_key: "$request_uri"
nginx_proxy_cache_key_map:
- match: "~^(.+[\\?\\&])_=\\d+(.*)$"
  key: "$1$2"
# Non-matches default to the unchanged nginx_proxy_cache_key

nginx_proxy_cache_ignore_headers: '"Set-Cookie" "Vary" "Expires"'
nginx_proxy_cache_hide_headers:
- Set-Cookie

nginx_proxy_cache_match_uri:
#- '"~webclient/api/paths_to_object*"'
- '"~web(client|gateway)/(metadata|render)_*"'
- '"~web(client|gateway)/get_thumbnail*"'
- '"~(webclient/)?api/*"'
- '"~static/*"'
- '"~mapr/*"'
- '"~gallery-api/*"'
- '"~webclient/img_detail/*"'
- '"~iviewer/*"'
- '"~grafana/*"'

#nginx_proxy_cache_match_arg:

# Order is important, the first match will be used
nginx_proxy_caches:
- name: omero
  maxsize: 1g
  keysize: 1m
  inactive: 180d
  match:
  - default
- name: omerostatic
  maxsize: 200m
  keysize: 1m
  inactive: 30d
  match:
  - '"~static/*"'
- name: omerothumbnail
  maxsize: 10g
  keysize: 300m
  inactive: 180d
  match:
  - '"~web(client|gateway)/render_thumbnail/*"'
  - '"~web(client|gateway)/get_thumbnail*"'
- name: omerorender
  maxsize: 40g
  keysize: 35m
  inactive: 180d
  match:
  - '"~web(client|gateway)/render_*/*"'
- name: omerometadata
  maxsize: 25g
  keysize: 65m
  inactive: 180d
  match:
  - '"~webclient/metadata_*"'
- name: omeroapi
  maxsize: 10g
  keysize: 320m
  inactive: 180d
  match:
  - '"~(webclient/)?api/*"'
- name: omeromapr
  maxsize: 5g
  keysize: 100m
  inactive: 180d
  match:
  - '"~mapr/*"'
- name: omeroviewers  # Metadata for viewers and related UI
  maxsize: 1g
  keysize: 1m
  inactive: 180d
  match:
  - '"~webclient/img_detail/*"'
  - '"~iviewer/*"'
- name: grafana
  maxsize: 100m
  keysize: 1m
  inactive: 1m
  match:
  - '"~grafana/*"'


######################################################################
# OMERO.web proxy redirects

# Order is important
nginx_proxy_redirect_map:
- match: default
  dest: /

- match: /mito/webclient/?show=screen-1
  dest: /webclient/?show=screen-1101
- match: /mito/webclient/?show=screen-701
  dest: /webclient/?show=screen-1302
- match: /mito/webclient/?show=well-324
  dest: /webclient/?show=well-771034

- match: /tara/webclient/?show=screen-151
  dest: /webclient/?show=screen-1201
- match: /tara/webclient/?show=plate-362
  dest: /webclient/?show=plate-4751

- match: /pgpc/webclient/?show=screen-101
  dest: /webclient/?show=screen-1151
- match: /pgpc/webclient/?show=run-2
  dest: /webclient/?show=plate-4101

- match: ~/mito
  dest: /webclient/?show=screen-1101
- match: ~/tara
  dest: /webclient/?show=screen-1201
- match: ~/pgpc
  dest: /webclient/?show=screen-1151

- match: /study/idr0083/figure/4i
  dest: /webclient/img_detail/9822151/?dataset=10201&x=34105&y=84808&zm=25&c=1|318:9927$808080&m=g
- match: /study/idr0083/figure/4r
  dest: /webclient/img_detail/9822152/?dataset=10201&x=80560&y=77440&zm=66&c=1|495:9204$808080&m=g

nginx_proxy_redirect_map_locations:
# TODO: change to 301 when we're happy
- location: "~ ^/(mito|tara|pgpc|study)($|/)"
  code: 302

# "= /" has higher priority than "/" in the proxy config
nginx_proxy_direct_locations:
# TODO: change to 301 when we're happy
- location: "= /webclient"
  redirect302: /webclient/?experimenter=-1
# Block webclient login
- location: "^~ /webclient/login"
  redirect302: /webclient/?experimenter=-1
- location: "^~ /about"
  alias: /srv/www/html
- location: "^~ /mineotaur"
  redirect302: /about/mineotaur.html
- location: "^~ /jupyter"
  redirect302: /about/analysis-environments.html
- location: "= /curation-workflow"
  redirect302: /about/curation-workflow.html
- location: "^~ /connection"
  alias: /srv/www/connection
- location: "^~ /.well-known/acme-challenge"
  alias: /srv/www/letsencrypt/challenge
- location: "= /submitter-survey"
  redirect302: https://forms.gle/beR4vqLrgLgRzgSX9


# CORS: basically allow any cross-site since this is public read-only
# Always set a header:
# - Return the client's header (should be the requesting domain) if one given
# - "*" otherwise
nginx_proxy_additional_maps:
- from: $http_origin
  to: $allow_origin
  mapvalues:
  - "default *"
# For now unconditionally return "*" in the Origin header
# Replace with this line to return the provided header (but be aware it may be
# necessary to return addiitonal headers)
#  - "~. $http_origin"
  - "~. *"


######################################################################
# Additional sites/virtualhosts
_nginx_proxy_sites:

  # This enables the default site (configured using the global
  # nginx_proxy_* variables):
  - nginx_proxy_is_default: True
    # Only add this CORS header to the default public site
    nginx_proxy_additional_directives:
    - "add_header Access-Control-Allow-Origin $allow_origin"
    # Study redirects
    # - "if ($request_uri ~ /search/\\?query=Name:(?<prefix>idr0)?NNN) {
    #   return 302 /about/download.html;}"

  # This is a duplicate of the main OMERO.web proxy configuration, but with
  # cache-busting:
  - nginx_proxy_server_name: cachebuster
    nginx_proxy_listen_http: 0
    nginx_proxy_ssl: False
    nginx_proxy_cachebuster_enabled: True
    nginx_proxy_backends:
    - name: omerocached
      location: ~ {{ _nginx_proxy_omero_locations | join('|') }}|/mapr/*
      server: http://omeroreadwrite
      cache_validity: 1d
      # For populating the cache we need to increase the default timeout
      read_timeout: 900
    - name: omerostatic
      location: ~ /static/*
      server: http://omeroreadwrite
      cache_validity: 1d
    - name: omero
      location: /
      server: http://omeroreadwrite

nginx_proxy_sites: "{{ _nginx_proxy_sites + (idr_proxy_additional_sites | default([])) }}"


######################################################################
# Other

nginx_proxy_block_locations:
- "^~ /django_prometheus"
#- "^~ /login"

#nginx_proxy_set_header_host: 'idr.openmicroscopy.org'


######################################################################
# OMERO backend read-only servers

# If there are [0:N] backends:
# - [0:idr_backend_reserved_offset] will be used for production
#   OMERO.web
# - [idr_backend_reserved_offset:N] will be used for analysis and
#   external OMERO API access. At least one backend will always be
#   assigned as an external proxy; if necessary it will overlap with
#   OMERO.web
idr_backend_reserved_offset: 2
idr_haproxy_frontend_omero_offset: 14060
idr_haproxy_frontend_omero_host: idr.openmicroscopy.org


######################################################################
# Static webpages (/about) on proxy

idr_openmicroscopy_org_version: 2022.05.05-1
deploy_archive_dest_dir: /srv/www/{{ idr_openmicroscopy_org_version }}
deploy_archive_src_url: https://github.com/IDR/idr.openmicroscopy.org/releases/download/{{ idr_openmicroscopy_org_version }}/idr.openmicroscopy.org.tar.gz
# Optional checksum. It should be safe to omit as long as you never
# overwrite an existing archive. This should not be a problem when using
# versioned directories.
deploy_archive_sha256: 3fe7833dfd1d7fe5acdb8616d5b6a20b24860bdf8a97d5155c9d258d92d87371
deploy_archive_symlink: /srv/www/html
idr_deployment_web_version_file: /srv/www/{{ idr_openmicroscopy_org_version }}/VERSION
idr_deployment_web_version_value: "{{ idr_environment | default('idr') }}"


######################################################################
# openmicroscopy.fluentd vars
fluentd_groups:
- adm
fluentd_source_configs:
- files/fluentd/nginx-proxy.conf
