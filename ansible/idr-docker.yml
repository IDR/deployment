# Setup IDR Docker nodes

- hosts: >
    {{ idr_environment | default('idr') }}-dockermanager-hosts
    {{ idr_environment | default('idr') }}-dockerworker-hosts
  roles:
    - role: openmicroscopy.docker
      # Upstream requires additional kubernetes configuration
      docker_install_upstream: False
      docker_use_ipv4_nic_mtu: True


- hosts: "{{ idr_environment | default('idr') }}-omeroreadonly-hosts"
  # Empty playbook to force loading of omero-hosts hostvars


- hosts: "{{ idr_environment | default('idr') }}-dockermanager-hosts"

  pre_tasks:
  - name: create NFS export directories
    become: yes
    file:
      path: /data/{{ item }}
      state: directory
    with_items:
    - idr-notebooks
    - mineotaur
    - volumes

  roles:
  - role: openmicroscopy.versioncontrol-utils
  - role: openmicroscopy.nfs-share
    nfs_shares:
      /data/idr-notebooks:
      - host: "*"
        options: 'ro'
      /data/mineotaur:
      - host: "*"
        options: 'rw'
#  - role: IDR.idr-jupyter

  tasks:

  # Notebooks

  - name: jupyterhub | check if idr-notebooks repo exists
    stat:
      path: "{{ idr_jupyter_notebook_host_volume }}/.git/HEAD"
    register: idr_notebook_st

  # If a repo exists locally don't update it in case there are local changes
  - name: jupyterhub | clone idr-notebooks
    become: yes
    git:
      dest: "{{ idr_jupyter_notebook_host_volume }}/"
      repo: "{{ idr_jupyter_notebook_repo }}"
      force: no
      version: "{{ idr_jupyter_notebook_repo_version | default('HEAD') }}"
    when: not idr_notebook_st.stat.exists

  # Symlink to a directory inside the notebook (not present on host)
  - name: jupyterhub | create notebooks scratch
    become: yes
    file:
      src: /scratch
      dest: "{{ idr_jupyter_notebook_host_volume }}/scratch"
      force: yes
      state: link

  - name: jupyterhub | update jupyter omero connection file
    become: yes
    blockinfile:
      dest: "{{ idr_jupyter_notebook_host_volume }}/library/idr.py"
      state: present
      # This ensures the code will be indented with 4 spaces
      block: |6
                import random
                HOSTNAME = str(random.choice({{ idr_jupyter_omero_host }}))
                USERNAME = "{{ idr_jupyter_omero_user }}"
                PASSWORD = "{{ idr_jupyter_omero_pass | quote }}"

  vars:
  # Mount this volume as /notebooks inside the docker container
  # You must ensure it has the correct permissions for writing
  - idr_jupyter_notebook_host_volume: /data/idr-notebooks
  - idr_jupyter_omero_host: >
      {{
        groups[idr_environment | default('idr') + '-omeroreadonly-hosts'] |
        map('extract', hostvars,
          ['ansible_' + (idr_net_iface | default('eth0')), 'ipv4', 'address']) | list
      }}
  - idr_jupyter_omero_user: public
  - idr_jupyter_omero_pass: public

#  - idr_jupyter_notebook_volumes: >
#      {
#        '{{ idr_jupyter_notebook_host_volume }}': '/notebooks',
#      }

- hosts: "{{ idr_environment | default('idr') }}-dockerworker-hosts"

  tasks:

  - name: jupyterhub | install docker-python
    become: yes
    yum:
      name: docker-python
      state: present

  - name: jupyterhub | pull docker images in advance
    become: yes
    docker_image:
      name: "{{ item }}"
      state: "present"
      force: "{{ idr_docker_pull_latest }}"
    with_items:
    - "{{ idr_jupyter_hub_image }}"
    - "{{ idr_jupyter_notebook_image }}"

  vars:
  - idr_docker_pull_latest: True
