# Setup IDR Docker nodes
# Inspired by https://thisendout.com/2016/09/13/deploying-docker-swarm-with-ansible/

- hosts: "{{ idr_environment | default('idr') }}-dockermanager-hosts,{{ idr_environment | default('idr') }}-dockerworker-hosts"

  roles:

  - role: basedeps
  - role: docker
    docker_use_ipv4_nic_mtu: True
  - role: docker-tools

  tasks:

  - name: docker swarm | check active
    become: yes
    shell: "docker info 2> /dev/null | sed -n 's/^Swarm: //p'"
    always_run: yes
    ignore_errors: yes
    register: docker_swarm_active
    changed_when: False


- hosts: "{{ idr_environment | default('idr') }}-dockermanager-hosts"

  tasks:

  - set_fact:
      docker_swarm_manager_ip: "{{ hostvars[groups[idr_environment | default('idr') + '-dockermanager-hosts'][0]]['ansible_' + (idr_net_iface | default('eth0'))]['ipv4']['address']}}"

  - name: docker swarm | initialise
    become: yes
    command: docker swarm init --advertise-addr {{ docker_swarm_manager_ip }}
    when: docker_swarm_active.stdout != 'active'

  - name: docker swarm | get worker token
    become: yes
    command: docker swarm join-token worker -q
    register: docker_swarm_worker_token_out

  - set_fact:
      docker_swarm_worker_token: "{{ docker_swarm_worker_token_out.stdout }}"


- hosts: "{{ idr_environment | default('idr') }}-dockerworker-hosts"

  tasks:

  - name: docker swarm | join worker
    become: yes
    command: docker swarm join --token {{ token }} {{ manager_ip }}
    when: docker_swarm_active.stdout != 'active'

  vars:
    token: "{{ hostvars[groups[idr_environment | default('idr') + '-dockermanager-hosts'][0]]['docker_swarm_worker_token'] }}"
    manager_ip: "{{ hostvars[groups[idr_environment | default('idr') + '-dockermanager-hosts'][0]]['docker_swarm_manager_ip'] }}"


- hosts: "{{ idr_environment | default('idr') }}-dockermanager-hosts[0]"

  tasks:

  - name: docker swarm | start jupyter
    become: yes
    docker_service:
      project_name: omero-jupyter
      state: present
      definition:
        version: "2"
        volumes:
          jupyter-notebooks:
        services:
          jupyter:
            image: manics/jupyter-docker
            ports:
            - "8888:8888"
            volumes:
            - jupyter-notebooks:/notebooks
