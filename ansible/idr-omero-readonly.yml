# Read-only OMERO
# This must be run after idr-omero.yml since it relies on volumes and
# database setup from a read-write server

# TODO: Consider putting some of this into a role

# OMERO read-write fileserver for OMERO read-only
- hosts: "{{ idr_environment | default('idr') }}-omeroreadwrite-hosts"

  pre_tasks:
  - name: Create idr-metadata directory
    become: yes
    file:
      path: /data/idr-metadata
      state: directory

  roles:

  - role: ome.nfs_share
    nfs_shares:
      # WARNING: This makes /data the root for all exports from this server
      /data:
      - host: "*"
        options: 'fsid=0'
      /data/OMERO:
      - host: "*"
        options: 'ro'
      /data/BioFormatsCache:
      # TODO: Limit which hosts can write to this dir
      - host: "*"
        options: 'rw'
      /data/idr-metadata:
      - host: "*"
        options: 'ro'

  # Include restart handlers
  - role: openmicroscopy.omero-common

  tasks:
  # Lock down the read-write node in the read-only cluster
  - name: OMERO.server prevent external access
    become: yes
    copy:
      content: |
        config set -- Ice.Default.Host 127.0.0.1
      dest: /opt/omero/server/config/omero-localhostonly-config.omero
      force: yes
    notify:
    - restart omero-server


# Read-only OMERO.server config
- hosts: "{{ idr_environment | default('idr') }}-omeroreadonly-hosts"

  pre_tasks:
  - name: Get fileserver host
    set_fact:
      omero_fileserver_host_ansible: "{{ hostvars[groups[idr_environment | default('idr') + '-omeroreadwrite-hosts'][0]]['ansible_' + (idr_net_iface | default('eth0'))]['ipv4']['address']}}"

  roles:
  # Use the same paths as on the omeorreadwrite server to reduce confusion
  - role: ome.nfs_mount
    nfs_share_mounts:
    - path: /data/OMERO-readonly
      location: "{{ omero_fileserver_host_ansible }}:/OMERO"
      opts: ro,soft
    - path: /data/BioFormatsCache
      location: "{{ omero_fileserver_host_ansible }}:/BioFormatsCache"
      opts: rw,,soft,sync
    - path: /data/idr-metadata
      location: "{{ omero_fileserver_host_ansible }}:/idr-metadata"
      opts: ro,soft

  # Include restart handlers
  - role: openmicroscopy.omero-common

  tasks:

  - name: OMERO.server config directory (pre-install)
    become: yes
    file:
      path: /opt/omero/server/config/
      recurse: yes
      state: directory

  - name: OMERO.server read-only configuration
    become: yes
    copy:
      content: |
        config set -- omero.data.dir /data/OMERO
        config set -- omero.cluster.read_only true
      dest: /opt/omero/server/config/omero-readonly-config.omero
      force: yes
    notify:
    - restart omero-server if installed

  # There are several bugs- read-only still needs write access to several
  # directories including ManagedRepository/.omero

  - name: OMERO.server read-only data dir
    become: yes
    file:
      path: "{{ item }}"
      owner: "{{ omero_server_system_uid }}"
      state: directory
    with_items:
    - /data/OMERO

  # Note BioFormatsCache is a separate read-write shared cache
  - name: OMERO.server read-only data dir symlinks
    become: yes
    file:
      src: /data/OMERO-readonly/{{ item }}/
      path: /data/OMERO/{{ item }}
      state: link
      force: yes
    with_items:
    - Files
    - FullText
    - ManagedRepository
    - Pixels
    - Thumbnails
    - .omero

  - name: OMERO.server BioFormatsCache symlinks
    become: yes
    file:
      src: /data/BioFormatsCache
      path: /data/OMERO/BioFormatsCache
      state: link
      force: yes

- hosts: "{{ idr_environment | default('idr') }}-database-hosts"
# Load hostvars for subsequent playbooks

  tasks:

  - name: Allow omeroreadonly database user to create temporary tables
    become: yes
    become_user: postgres
    postgresql_privs:
      database: "{{ idr_omero_readonly_database.name }}"
      privs: "TEMPORARY"
      roles: "{{ idr_omero_readonly_database.user }}"
      state: present
      type: database

  - name: Give omeroreadonly database user access to database
    become: yes
    become_user: postgres
    postgresql_privs:
      database: "{{ idr_omero_readonly_database.name }}"
      objs: ALL_IN_SCHEMA
      privs: "SELECT"
      roles: "{{ idr_omero_readonly_database.user }}"
      state: present
      type: table

  - name: Check whether statement_timeout needs to be changed
    become: yes
    become_user: postgres
    command: psql -Atqc "SELECT useconfig FROM pg_user WHERE usename='{{ idr_omero_readonly_database.user }}'"
    register: omero_readonly_statement_timeout
    check_mode: no
    changed_when: no

  - name: Limit query timeouts for omeroreadonly database user
    become: yes
    become_user: postgres
    command: psql -c 'ALTER ROLE {{ idr_omero_readonly_database.user }} SET statement_timeout = {{ idr_omero_readonly_database.statement_timeout }};'
    when: >-
      not (omero_readonly_statement_timeout.stdout | search(
        '[{,]statement_timeout=' + (
          idr_omero_readonly_database.statement_timeout | string) +
        '[},]'
      ))


- hosts: "{{ idr_environment | default('idr') }}-omeroreadonly-hosts"
  tasks:
  - name: Get database host
    set_fact:
      omero_db_host_ansible: "{{ hostvars[groups[idr_environment | default('idr') + '-database-hosts'][0]]['ansible_' + (idr_net_iface | default('eth0'))]['ipv4']['address']}}"


- hosts: >
    {{ idr_environment | default('idr') }}-omeroreadonly-hosts

  roles:
  - role: openmicroscopy.omero-server
    when: not (TRAVIS | default(False))

  environment: "{{ idr_ANSIBLE_ENVIRONMENT_VARIABLES | default({}) }}"
