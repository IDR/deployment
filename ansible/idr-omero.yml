# Install OMERO.server on the IDR
# Testing vars. Set:
# - `idr_net_iface=iface` if your servers use a network interface other
#   then eth0 for inter-machine networking

- hosts: "{{ idr_environment | default('idr') }}-database-hosts"

  roles:
  - role: ome.postgresql

  # tasks:
  # - name: postgres idr pg_stat_statements extension
  #   become: yes
  #   become_user: postgres
  #   postgresql_ext:
  #     db: idr
  #     name: pg_stat_statements
  #     state: present


# There is an OMERO rw server, a database server, and multiple OMERO ro.
# The next two plays set a hostvar so that the OMERO servers connect to
# the correct database

- hosts: "{{ idr_environment | default('idr') }}-omero-hosts"
  tasks:
  - name: Get database host
    set_fact:
      omero_db_host_ansible: >-
        {{ hostvars[groups[idr_environment | default('idr') +
        '-database-hosts'][0]][
        'ansible_' + (idr_net_iface | default('eth0'))]['ipv4']['address'] }}


# Currently there's a bug in OMERO read-only which means the database
# must have been written to at least once by the current server version
# The easiest way to do this is do:
# - deploy a persistent read-write server which listens on localhost only
# - bring up the servers in the required order

# Vars are in
# - group_vars/omero-hosts.yml
# - group_vars/omeroreadwrite-hosts.yml
# - group_vars/omeroreadonly-hosts.yml

- hosts: "{{ idr_environment | default('idr') }}-omero-hosts"

  roles:
  - role: ome.basedeps
  - role: ome.versioncontrol_utils
  - role: ome.python_pydata
  - role: ome.analysis_tools

- hosts: "{{ idr_environment | default('idr') }}-omeroreadwrite-hosts"

  roles:
  - role: ome.omero_server

  environment: "{{ idr_ANSIBLE_ENVIRONMENT_VARIABLES | default({}) }}"

# There are two custom IDR modifications departing from a vanilla OMERO.server:
# - OMERO.scripts are deleted
# - an IDR-specific version of Bio-Formats is installed

- hosts: "{{ idr_environment | default('idr') }}-omeroreadwrite-hosts"

  roles:
  - role: ome.omero_common

  tasks:
    - name: Override lib/server JARs
      become: yes
      get_url:
        url: "{{ artifactory_baseurl }}/{{ item.group }}/{{ item.name }}/{{ item.version }}/{{ item.name }}-{{ item.version }}.jar"
        dest: "{{ omero_common_basedir }}/server/OMERO.server/lib/server/{{ item.name }}.jar"
        force: yes
      with_items: "{{ idr_bf_jars }}"
      notify: restart omero-server

    - name: Override lib/client JARs
      become: yes
      get_url:
        url: "{{ artifactory_baseurl }}/{{ item.group }}/{{ item.name }}/{{ item.version }}/{{ item.name }}-{{ item.version }}.jar"
        dest: "{{ omero_common_basedir }}/server/OMERO.server/lib/client/{{ item.name }}.jar"
        force: yes
      with_items: "{{ omero_client_jars + idr_bf_jars }}"
      notify: restart omero-server

    - name: Remove OMERO scripts
      become: yes
      file:
        path: "{{ omero_common_basedir }}/server/OMERO.server/lib/scripts/omero"
        state: absent
      notify: restart omero-server
