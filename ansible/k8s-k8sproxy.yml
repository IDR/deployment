# Setup the K8s shared web proxy

# Load hostvars
- hosts: >
    {{ idr_environment | default('k8s') }}-k8svae-hosts
    {{ idr_environment | default('k8s') }}-k8strain-hosts


- hosts: "{{ idr_environment | default('idr') }}-k8sproxy-hosts"

  pre_tasks:

  - name: Get IPs
    set_fact:
      k8s_vae_nodes: >-
        {{
          (groups[idr_environment | default('k8s') + '-k8svae-node-hosts']) |
          default([]) |
          map('extract', hostvars,
            ['ansible_' + (idr_net_iface | default('eth0')), 'ipv4', 'address']) |
          sort
        }}
      k8s_vae_masters: >-
        {{
          (groups[idr_environment | default('k8s') + '-k8svae-master-hosts']) |
          default([]) |
          map('extract', hostvars,
            ['ansible_' + (idr_net_iface | default('eth0')), 'ipv4', 'address']) |
          sort
        }}
      k8s_train_nodes: >-
        {{
          groups[idr_environment | default('k8s') + '-k8strain-node-hosts'] |
          default([]) |
          map('extract', hostvars,
            ['ansible_' + (idr_net_iface | default('eth0')), 'ipv4', 'address']) |
          sort
        }}
      k8s_train_masters: >-
        {{
          groups[idr_environment | default('k8s') + '-k8strain-master-hosts'] |
          default([]) |
          map('extract', hostvars,
            ['ansible_' + (idr_net_iface | default('eth0')), 'ipv4', 'address']) |
          sort
        }}

  roles:

  - role: ome.selinux_utils

  # Default to a self-signed certificate, to use production certificates see
  # https://github.com/openmicroscopy/ansible-role-ssl-certificate/blob/0.2.0/README.md
  - role: ome.ssl_certificate

  # TODO: Restart haproxy when certificate changes
  - role: ome.haproxy
    haproxy_cfg_template: "{{ playbook_dir }}/templates/k8sproxy-haproxy.cfg.j2"
    # haproxy needs some special setup to log to a file
    haproxy_syslog_configure_udp: True
    haproxy_syslog_enable: True

  handlers:

  - name: restart haproxy when certificates changed
    listen: ssl certificate changed
    become: yes
    service:
      name: haproxy
      state: restarted
