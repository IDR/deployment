# Based on
# https://github.com/yuvipanda/jupyterhub-simplest-k8s/tree/master/simplest

# You must run jupyterhub-config.yml first to create jupyterhub-config
---
# TODO: can we tighten up the privileges?
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: jupyterhub-spawner
  namespace: default
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["*"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jupyterhub-spawner
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: jupyterhub-spawner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jupyterhub-spawner
subjects:
- kind: ServiceAccount
  name: jupyterhub-spawner
  namespace: default

---
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub-proxy
  labels:
    name: jupyterhub-proxy
spec:
  type: NodePort
  ports:
  - port: 8000
    # Use a fixed port to make testing easier
    nodePort: 31800
  selector:
    name: jupyterhub-pod

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jupyterhub
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: jupyterhub-pod
    spec:
      serviceAccount: jupyterhub-spawner
      containers:
      - name: jupyterhub-container
        image: imagedata/jupyterhub-githubauth:0.5.0
        imagePullPolicy: IfNotPresent
        command:
        - jupyterhub
        - --no-ssl
        - --no-db
        - --log-level=DEBUG
        - --base-url=/jupyter
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_HASH
          value: "{{ kubernetes_jupyterhub_config_hash }}"
        envFrom:
        - configMapRef:
            name: jupyterhub-envvars
        ports:
        - name: jupyterhub-port
          containerPort: 8000
