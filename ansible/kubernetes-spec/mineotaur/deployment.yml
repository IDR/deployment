# Mineotaur
# ---
# # TODO: can we tighten up the privileges?
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRole
# metadata:
#   name: jupyterhub-spawner
#   namespace: default
# rules:
# - apiGroups: [""] # "" indicates the core API group
#   resources: ["pods"]
#   verbs: ["*"]
# - apiGroups: [""]
#   resources: ["persistentvolumeclaims"]
#   verbs: ["*"]
#
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: jupyterhub-spawner
#   namespace: default
#
# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: jupyterhub-spawner
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: jupyterhub-spawner
# subjects:
# - kind: ServiceAccount
#   name: jupyterhub-spawner
#   namespace: default

---
apiVersion: v1
kind: Service
metadata:
  name: mineotaur-proxy
  labels:
    name: mineotaur-proxy
spec:
  type: NodePort
  ports:
  - port: 8080
    # Use a fixed port to make testing easier
    nodePort: 31900
  selector:
    name: mineotaur-pod

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mineotaur-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mineotaur-pod
    spec:
      #serviceAccount: jupyterhub-spawner
      containers:
      - name: mineotaur-container
        image: imagedata/mineotaur
        imagePullPolicy: IfNotPresent
        command:
        - java
        - -Xmx8g
        - -Djava.security.egd=file:/dev/urandom
        - -jar
        - /home/build/src/target/Mineotaur-1.0.1.jar
        - -start
        - /mineotaur
        ports:
        - name: mineotaur-port
          containerPort: 8080
        volumeMounts:
        - name: mineotaur-data-volume
          mountPath: /mineotaur
      volumes:
      - name: mineotaur-data-volume
        persistentVolumeClaim:
          claimName: idr-mineotaur-rw
