# Fluentd log handling
# + Elasticsearch + Kibana

# This assumes docker has already been installed
# (by management-prometheus.yml)
- hosts: "{{ idr_environment | default('idr') }}-management-hosts"

  tasks:

  - name: Create fluentd server configuration directory
    become: yes
    file:
      path: /etc/fluentd
      recurse: yes
      state: directory

  - name: Create fluentd aggregated logs directory
    become: yes
    file:
      path: /data/fluentd
      recurse: yes
      state: directory
      # User id in fluentd Docker image
      owner: 1000
      group: 1000

  - name: Copy fluentd server configuration files
    become: yes
    template:
      src: files/fluentd-server/fluent.conf.j2
      dest: /etc/fluentd/fluent.conf
    register: fluent_conf_status

  - name: Stop docker fluentd if config changed
    become: yes
    docker_container:
      image: manics/fluentd-idr
      name: fluentd
      state: stopped
    when: fluent_conf_status | changed

  - name: Create elasticsearch directory
    become: yes
    file:
      path: /data/elasticsearch
      recurse: yes
      state: directory
      # User id in elasticsearch Docker image
      owner: 1000
      group: 1000

  - name: Run docker elasticsearch
    become: yes
    docker_container:
      image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.1"
      name: elasticsearch
      env:
        discovery.type: single-node
      published_ports:
      - "9200:9200"
      #- "9300:9300"
      state: started
      restart_policy: always
      volumes:
      - /data/elasticsearch:/usr/share/elasticsearch/data

  - name: Run docker fluentd
    become: yes
    docker_container:
      image: manics/fluentd-idr
      name: fluentd
      links:
      - "elasticsearch:elasticsearch"
      published_ports:
      - "24224:24224/udp"
      - "24224:24224"
      state: started
      restart_policy: always
      volumes:
      - /etc/fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - /data/fluentd:/data/fluentd

  - name: Run docker kibana
    become: yes
    docker_container:
      image: "docker.elastic.co/kibana/kibana-oss:6.1.1"
      name: kibana
      links:
      # This matches the default kibana config:
      - "elasticsearch:elasticsearch"
      published_ports:
      - "5601:5601"
      state: started
      restart_policy: always

  vars:
    fluentd_shared_key: "{{ idr_secret_fluentd_shared_key | default('fluentd') }}"
    fluentd_slack_token: "{{ idr_secret_management_slack_token | default(None) }}"
    fluentd_slack_channel: "idr-notify-{{ idr_environment | default('idr') }}"
    fluentd_elasticsearch_host: elasticsearch



- hosts: >
    {{ idr_environment | default('idr') }}-proxy-hosts
    {{ idr_environment | default('idr') }}-omero-hosts

  roles:
  - role: openmicroscopy.fluentd

  # TODO: Ideally we'd use the `validate:` option to check these config
  # files, but it's not possible to validate only a fragment.
  # Instead we need to create these files before applying the role
  pre_tasks:

  - name: Create fluentd conf.d
    become: yes
    file:
      path: /etc/td-agent/conf.d
      state: directory

  - name: Configure fluentd forwarding
    become: yes
    template:
      src: files/fluentd/forward-conf.j2
      dest: /etc/td-agent/conf.d/forward.conf
    notify:
    - restart fluentd

  - name: Copy fluentd configuration
    become: yes
    copy:
      src: "{{ item }}"
      dest: "/etc/td-agent/conf.d/{{ item | basename }}"
    with_items:
    # These are specifc to each host-group
    - "{{ fluentd_source_configs }}"
    notify:
    - restart fluentd

  vars:
    fluentd_server_address: "{{ hostvars[groups[idr_environment | default('idr') + '-management-hosts'][0]]['ansible_' + (idr_net_iface | default('eth0'))]['ipv4']['address'] }}"
    fluentd_shared_key: "{{ idr_secret_fluentd_shared_key | default('fluentd') }}"
