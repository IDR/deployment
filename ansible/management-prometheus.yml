# Experimental: Prometheus

- hosts: >
    {{ idr_environment | default('idr') }}-hosts

  roles:
  - role: openmicroscopy.prometheus-node


# TODO: Do we trust the JMX monitoring agent for OMERO?
# If not disable this playbook
- hosts: >
    {{ idr_environment | default('idr') }}-omero-hosts

  roles:
  - role: openmicroscopy.prometheus-jmx
  # Needed for handlers
  - role: openmicroscopy.omero-common

  tasks:
  # TODO: Requires a custom build from HEAD
  - name: omero prometheus agent
    become: yes
    copy:
      content: |
        # Requires https://github.com/prometheus/jmx_exporter/pull/162
        config set -- omero.jvmcfg.append.blitz "-javaagent:{{ jmx_javaagent }}=9180:/etc/prometheus/jmx-default-config.yml"
        config set -- omero.jvmcfg.append.indexer "-javaagent:{{ jmx_javaagent }}=9181:/etc/prometheus/jmx-default-config.yml"
        config set -- omero.jvmcfg.append.pixeldata "-javaagent:{{ jmx_javaagent }}=9182:/etc/prometheus/jmx-default-config.yml"
      dest: "{{ omero_common_basedir }}/server/config/prometheus.omero"
    notify:
    - restart omero-server

  - name: omero-web django prometheus install
    become: yes
    pip:
      #name: django_prometheus
      #name: https://github.com/manics/django-prometheus/archive/1.0.9-ome1.zip
      name: https://github.com/manics/django-prometheus/archive/pr46.zip
      state: present
      #version: v1.0.8
      virtualenv: "{{ omero_common_basedir }}/web/venv"
      virtualenv_site_packages: yes
    notify:
    - restart omero-web

  - name: omero-web django prometheus configure
    become: yes
    copy:
      content: |
        config append -- omero.web.middleware '{"index":0, "class": "django_prometheus.middleware.PrometheusBeforeMiddleware"}'
        config append -- omero.web.middleware '{"index":1000, "class": "django_prometheus.middleware.PrometheusAfterMiddleware"}'
        config append -- omero.web.apps '"django_prometheus"'

        config set -- omero.web.wsgi_args '--config file:/opt/omero/web/config/gunicorn-config.py'
      dest: "{{ omero_common_basedir }}/web/config/django-prometheus.omero"
    notify:
    - restart omero-web

  - name: omero-web gunicorn prometheus configure
    become: yes
    copy:
      content: |
        from prometheus_client import multiprocess
        def child_exit(server, worker):
            multiprocess.mark_process_dead(worker.pid)
      dest: "{{ omero_common_basedir }}/web/config/gunicorn-config.py"
    notify:
    - restart omero-web

  - name: omero-web service.d directory
    become: yes
    file:
      path: /etc/systemd/system/omero-web.service.d
      state: directory

  - name: omero-web service.d prometheus
    become: yes
    copy:
      content: |
        [Service]
        Environment="prometheus_multiproc_dir=/opt/omero/web/OMERO.web/var/prometheus"
        ExecStartPre=/bin/sh -c '/usr/bin/rm -rf "$prometheus_multiproc_dir" && \
            /usr/bin/mkdir -p "$prometheus_multiproc_dir"'
      dest: /etc/systemd/system/omero-web.service.d/prometheus.conf
    notify:
    - restart omero-web

  vars:
    # prometheus-jmx automatically creates this:
    jmx_javaagent: /opt/prometheus/jars/jmx_prometheus_javaagent.jar


# prometheus-omero-py session monitoring
# TODO: Consider moving this into a role
- hosts: "{{ idr_environment | default('idr') }}-omero-hosts"

  roles:
  - role: openmicroscopy.versioncontrol-utils

  tasks:

  # TODO: If we keep this move to a separate repo
  - name: prometheus-omero-py | install prometheus-omero-py
    become: yes
    git:
      dest: /opt/prometheus-omero-py/src
      force: yes
      repo: https://gist.github.com/238a63cfd9c2fb8a450252d79e609296.git
      #version: HEAD
      version: dbcb32b5bd212ff9dd1060808f2fa850194ab2d1
    notify:
    - restart prometheus-omero-py

  - name: prometheus-omero-py | setup virtualenv
    become: yes
    pip:
      requirements: /opt/prometheus-omero-py/src/requirements.txt
      state: present
      virtualenv: /opt/prometheus-omero-py/venv
      virtualenv_site_packages: yes
    notify:
    - restart prometheus-omero-py

  - name: prometheus-omero-py | systemd service
    become: yes
    copy:
      dest: /etc/systemd/system/prometheus-omero-py.service
      src: /opt/prometheus-omero-py/src/prometheus-omero-py-metrics.service
      remote_src: True
    notify:
    - restart prometheus-omero-py

  - name: prometheus-omero-py | options
    become: yes
    copy:
      content: >
        OPTIONS="--host localhost --listen 9171 --verbose --interval 15"
      dest: /etc/sysconfig/prometheus-omero-py
    notify:
    - restart prometheus-omero-py

  - name: prometheus-omero-py | enable service
    become: yes
    systemd:
      daemon_reload: yes
      enabled: yes
      name: prometheus-omero-py
      state: started

  handlers:
  - name: restart prometheus-omero-py
    become: yes
    systemd:
      daemon_reload: yes
      enabled: yes
      name: prometheus-omero-py
      state: restarted


- hosts: >
    {{ idr_environment | default('idr') }}-dockermanager-hosts
    {{ idr_environment | default('idr') }}-dockerworker-hosts

  roles:

  - role: openmicroscopy.cadvisor


- hosts: "{{ idr_environment | default('idr') }}-management-hosts"

  roles:

  - role: openmicroscopy.docker
    docker_use_ipv4_nic_mtu: True

  - role: openmicroscopy.prometheus
    prometheus_alertmanager_slack_webhook: "{{ idr_secret_management_slack_webhook }}"
    prometheus_alertmanager_slack_channel: "#idr-notify-{{ idr_environment | default('idr') }}"
    # The defaults in the prometheus role are (30s 5m 3h)
    # When testing you may want to decrease these to make it easier
    #prometheus_alert_group_wait: 10s
    #prometheus_alert_group_interval: 1m
    #prometheus_alert_repeat_interval: 1m

    # groupname must be unique
    prometheus_targets:
    - groupname: nodes
      groups:
      - "{{ idr_environment | default('idr') + '-hosts' }}"
      port: 9100
      jobname: node-exporter

# TODO: Disabled due to https://github.com/prometheus/jmx_exporter/issues/156
# Currently testing using a custom build from HEAD
# https://github.com/prometheus/jmx_exporter/pull/162
# https://github.com/prometheus/jmx_exporter/commit/5b180affbefa445088d4608b9640ca404ce91ae2
    - groupname: blitz
      groups:
      - "{{ idr_environment | default('idr') + '-omero-hosts' }}"
      port: 9180
      jobname: jmx-blitz

    # TODO: indexer and pixeldata are currently broken (fail to start)on
    # metadata53 due to the readonly work. These two targets should be
    # reenabled when they are fixed:
    # - groupname: indexer
    #   groups:
    #   - "{{ idr_environment | default('idr') + '-omero-hosts' }}"
    #   port: 9181
    #   jobname: jmx-indexer
    #
    # - groupname: pixeldata
    #   groups:
    #   - "{{ idr_environment | default('idr') + '-omero-hosts' }}"
    #   port: 9182
    #   jobname: jmx-pixeldata

    - groupname: cadvisor
      groups:
      - "{{ idr_environment | default('idr') + '-dockermanager-hosts' }}"
      - "{{ idr_environment | default('idr') + '-dockerworker-hosts' }}"
      port: 9280
      jobname: cadvisor-docker

    - groupname: omero-web
      groups:
      - "{{ idr_environment | default('idr') + '-omero-hosts' }}"
      port: 80
      jobname: django
      metrics_path: /django_prometheus/metrics

    - groupname: omero-sessions
      groups:
      - "{{ idr_environment | default('idr') + '-omero-hosts' }}"
      port: 9171
      jobname: omero-sessions

    prometheus_http_2xx_internal_targets: >
      {{
        (groups[(idr_environment | default('idr')) + '-omero-hosts'] +
             groups[(idr_environment | default('idr')) + '-proxy-hosts']
        ) |
        map('extract', hostvars, [
            'ansible_' + (hosts_populate_iface | default('eth0')),
            'ipv4',
            'address'
        ]) |
        map('regex_replace', '^(.*)$', 'http://\1/webclient/metadata_details/screen/1201/' ) | list
      }}

    prometheus_http_2xx_external_targets:
    - http://idr.openmicroscopy.org/about/
    - https://idr.openmicroscopy.org/about/

    prometheus_rsync_banner_targets:
    - idr.openmicroscopy.org:873
