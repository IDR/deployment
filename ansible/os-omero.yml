# Example playbook for installing OMERO.server into a VM
#
# This is initially aimed at testing a mini-IDR, so some production tuning is
# required (limits.d).
# In addition the samba-client and python-pydata roles are also installed
# as they are required for some IDR related tasks.
# For a standard production server you won't need these.


- hosts: database-hosts

  roles:
  - role: postgresql
    postgresql_server_listen: "'*'"
    postgresql_server_auth:
    - database: omero
      user: omero
      address: 0.0.0.0/0
    postgresql_users_databases:
    - user: omero
      password: omero
      databases: [omero]


- hosts: omero-hosts

  pre_tasks:
  # This is needed for ansible to be run by cloud-init
  - lineinfile:
      backup: yes
      dest: /etc/sudoers
      regexp: "^Defaults\\s+requiretty"
      state: absent
      validate: "visudo -cf %s"
    become: yes

  # Increase open files and processes (alternatively use the pam_limits module)
  - copy:
      content: |
        omero hard nofile 16384
        omero soft nofile 16384
        omero hard noproc 8192
        omero soft noproc 8192
      dest: /etc/security/limits.d/95-omero.conf
    become: yes

  - yum: pkg=screen state=present
    become: yes

  roles:
  - role: upgrade-distpackages
  - role: versioncontrol-utils
  - role: omero-server
  - role: python-pydata

  vars:
    omero_dbhost: "{{ hostvars[groups['database-hosts'][0]]['ansible_host'] }}"
    omero_dbuser: omero
    omero_dbname: omero
    omero_dbpassword: omero
    omero_datadir: /data/OMERO
    omero_selinux_setup: True
    omero_upgrade: True
    omero_release: 5.2.0
    omero_systemd_setup: True
    omero_db_create: False


- hosts: proxy-hosts

  roles:
  - role: nginx-proxy
    nginx_dynamic_proxies:
    - name: omero
      location: /
      server: "{{ hostvars[groups['omero-hosts'][0]]['ansible_host'] }}"
