---
# Advanced configuration for Docker

- name: upstream docker | configure advanced
  become: yes
  template:
    src: docker-engine.j2
    dest: /etc/sysconfig/docker-engine
    backup: yes
  when: docker_use_custom_storage or docker_use_custom_network or docker_additional_args
  notify:
    - restart docker

# Upstream docker doesn't automatically load custom settings, so we need to
# customise the systemd file

- name: upstream docker| check change-time of original docker.service
  stat:
    path: /usr/lib/systemd/system/docker.service
  register: st0

- name: upstream docker| check change-time of modified docker.service
  stat:
    path: /etc/systemd/system/docker.service
  register: st1

- name: upstream docker | check docker.service systemd file update required
  set_fact:
    docker_systemd_file_update: (docker_use_custom_storage or docker_use_custom_network) and (not st1.stat.exists or st1.stat.ctime < st0.stat.ctime)

- name: upstream docker | copy systemd file
  become: yes
  command: cp /usr/lib/systemd/system/docker.service /etc/systemd/system/docker.service
  when: docker_systemd_file_update

# Can't use a notifier because the reload must happen before a start/restart
- name: docker production | reload systemd
  become: yes
  command: systemctl daemon-reload
  when: docker_systemd_file_update
  notify:
    - restart docker

# Use patch so that we know if upstream makes any significant changes
- name: upstream docker | customise systemd file
  become: yes
  patch:
    dest: /etc/systemd/system/docker.service
    src: docker-service.patch
  when: docker_use_custom_storage or docker_use_custom_network
  notify:
    - restart docker

- name: upstream docker | remove custom systemd file
  become: yes
  file:
    path: /etc/systemd/system/docker.service
    state: absent
  when: not docker_use_custom_storage and not docker_use_custom_network
  notify:
    - restart docker
