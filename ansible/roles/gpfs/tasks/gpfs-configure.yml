---
# Local system configuration for GPFS, including ssh keys and mount options

- name: gpfs | nsd access ssh root
  become: yes
  lineinfile:
    backup: yes
    create: no
    dest: /etc/ssh/sshd_config
    line: "PermitRootLogin yes"
    regexp: '[\s#]*PermitRootLogin\s.*'
    state: present
  notify:
    - restart sshd

- name: gpfs | nsd access ssh keys
  become: yes
  authorized_key:
    key: "{{ item }}"
    manage_dir: yes
    state: present
    user: root
  with_items: "{{ gpfs_public_keys | default([]) }}"

# This regexp checks for the absence of gpfs_binaries_path in PATH
# It won't work if there are multiple PATH statements in .bash_profile
# https://coderwall.com/p/ynvi0q/updating-path-with-ansible-system-wide
- name: gpfs | root path
  become: yes
  lineinfile:
    backrefs: yes
    backup: yes
    create: no
    dest: /root/.bash_profile
    line: 'PATH=\1\2:{{ gpfs_binaries_path }}\3'
    regexp: 'PATH=(["]*)((?!.*?{{ gpfs_binaries_path }}).*?)(["]*)$'
    state: present

# Node-specific GPFS configuration
# https://www.ibm.com/developerworks/community/wikis/home?lang=en#!/wiki/General%20Parallel%20File%20System%20%28GPFS%29/page/File%20System%20Management

- name: gpfs | set mount options
  become: yes
  copy:
    content: "{{ item.value }}"
    dest: /var/mmfs/etc/localMountOptions.{{ item.key }}
  when: item.value
  with_dict: "{{ gpfs_node_specific_mount_options | default ({}) }}"

- name: gpfs | clear mount options
  become: yes
  file:
    path: /var/mmfs/etc/localMountOptions.{{ item.key }}
    state: absent
  when: not item.value
  with_dict: "{{ gpfs_node_specific_mount_options | default ({}) }}"
