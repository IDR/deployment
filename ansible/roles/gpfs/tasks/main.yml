---
# tasks file for roles/gpfs

- name: gpfs | current kernel version
  fail:
    msg: "Current kernel {{ ansible_kernel }} must match specified GPFS kernel {{ gpfs_kernel_version }}"
  when: ansible_kernel != gpfs_kernel_version

- name: gpfs | install system requirements
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
  - kernel-devel
  - kernel-headers
  - kernel-tools
  - kernel-tools-libs
  - rpm-build
  - gcc-c++

- name: gpfs | download directory
  become: yes
  file:
    path: /opt/gpfs-installer
    state: directory

- name: gpfs | Get GPFS package (url)
  become: yes
  get_url:
    checksum: sha1:{{ gpfs_package_sha1 }}
    dest: /opt/gpfs-installer/{{ gpfs_package_filename }}
    mode: 0755
    url: "{{ gpfs_package_source }}"
    url_password: "{{ gpfs_download_password | default(None) }}"
    url_username: "{{ gpfs_download_username | default(None) }}"
  when: gpfs_package_source | search("\w+://\w+")

- name: gpfs | Get GPFS package (copy)
  become: yes
  copy:
    dest: /opt/gpfs-installer/{{ gpfs_package_filename }}
    force: no
    mode: 0755
    src: "{{ gpfs_package_source }}"
    validate: sh -c '[ "$(cat %s | sha1sum)" = "{{ gpfs_package_sha1 }}  -" ]'
  when: not (gpfs_package_source | search("\w+://\w+"))

- name: gpfs | Extract packages
  become: yes
  command: /opt/gpfs-installer/{{ gpfs_package_filename }} --silent
  args:
    creates: "{{ gpfs_package_test_unpacked }}"

- name: gpfs | Remove packages
  become: yes
  yum:
    name: "{{ gpfs_rpm_remove_list }}"
    state: absent

- name: gpfs | Install packages
  become: yes
  yum:
    name: "{{ gpfs_package_extracted_rpms_dir }}/{{ item }}"
    state: present
  with_items: "{{ gpfs_rpm_list }}"

- name: gpfs | build kernel module
  become: yes
  command: /usr/lpp/mmfs/bin/mmbuildgpl --buildrpm
  args:
    creates: /root/rpmbuild/RPMS/x86_64/{{ gpfs_kernel_rpm_name }}
  environment:
    LINUX_DISTRIBUTION: REDHAT_AS_LINUX

- name: gpfs | Fetch all GPFS RPMs
  become: yes
  fetch:
    dest: "{{ gpfs_local_rpm_dir }}/"
    fail_on_missing: yes
    flat: yes
    src: "{{ gpfs_package_extracted_rpms_dir }}/{{ item }}"
  with_items: "{{ gpfs_rpm_list }}"

- name: gpfs | Fetch GPFS kernel RPM
  become: yes
  fetch:
    dest: "{{ gpfs_local_rpm_dir }}/"
    fail_on_missing: yes
    flat: yes
    src: /root/rpmbuild/RPMS/x86_64/{{ gpfs_kernel_rpm_name }}
