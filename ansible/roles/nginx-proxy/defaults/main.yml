---
# defaults file for roles/nginx-proxy

# Number of worker processes, use auto to set this to the number of CPUs
nginx_proxy_worker_processes: 1

# Format for access.log, see templates/nginx-conf.j2 for predefined formats
nginx_proxy_log_format: main_timed_cache

# Enable SSL?
nginx_proxy_ssl: False

# Enable HTTP2 (ignore is nginx_proxy_ssl False)?
nginx_proxy_http2: False

# Redirect all http requests to https?
nginx_proxy_force_ssl: False

# Optional vars:

# Server path to SSL certificate
nginx_proxy_ssl_certificate: ""

# Server path to SSL certificate key
nginx_proxy_ssl_certificate_key: ""

# Local path to the SSL certificate
nginx_proxy_ssl_certificate_source_path: ""

# Local path to the SSL certificate key
nginx_proxy_ssl_certificate_key_source_path: ""

# If defined the age to return in the Strict-Transport-Security header
nginx_proxy_hsts_age:

# DNS servers for hostname lookups
nginx_dynamic_proxy_resolvers:

# Number and size of proxy buffers
nginx_proxy_buffers:

# List of dicts of backend servers
# To force dynamic DNS lookups need to use a variable:
# https://www.jethrocarr.com/2013/11/02/nginx-reverse-proxies-and-dns-resolution/
# http://forum.nginx.org/read.php?2,215830,215832#msg-215832
nginx_proxy_backends: []
#- name: test # Required if dynamic: True
#  location: /prefix
#  server: http://example.org
#  dynamic: False
#  cache_validity: 1d
#  websockets: False

# List of redirections
nginx_proxy_redirect_map: []
#- match: /old/url
#  dest: /new/url

# List of locations to be passed to nginx_proxy_redirect_map, and http status
nginx_proxy_redirect_map_locations: []
#- location: /old
#  code: 302

# List of locations to be handled without using the map (no query $args)
nginx_proxy_direct_locations: []
#- location: /old
#  redirect301: /new/url
#  redirect302: /new/url
#  index: index.html

# Locations which should be blocked
nginx_proxy_block_locations: []

# Set this to True if any proxies require websockets
nginx_proxy_websockets_enable: False

# List of dicts of backend streaming servers
nginx_proxy_streams: []

# Caching parameters
# Parent path of Nginx disk caches
nginx_proxy_cache_parent_path: /var/cache/nginx
# List of caches
nginx_proxy_caches: []

# Don't cache these URI patterns (list)
nginx_proxy_cache_skip_uri: [ default ]
# Cache these URI patterns (list)
nginx_proxy_cache_match_uri: []
# Don't cache these arg patterns (list)
nginx_proxy_cache_skip_arg: []
# Cache these arg patterns (list)
nginx_proxy_cache_match_arg: []


# Pass this hostname to the backend proxy, default is automatic
nginx_proxy_set_header_host: "$host"

# Set a trusted header containing the scheme to be passed to the backend
nginx_proxy_forward_scheme_header:

# Set to True to add X-Proxy-Cache* headers for debugging
nginx_proxy_debug_cache_headers: False

# Prevent multiple backend requests to the same object within this time
nginx_proxy_cache_lock_time: 1m

# Headers to be ignored in cache, e.g. '"Set-Cookie" "Vary" "Expires"'
nginx_proxy_cache_ignore_headers:

# Headers to be hidden from clients in cached responses, list
nginx_proxy_cache_hide_headers: []

# Override the default Nginx cache key
nginx_proxy_cache_key:

# Manipulate the cache key
nginx_proxy_cache_key_map: []

# Use stale cache if these situations are encountered
nginx_proxy_cache_use_stale: "error timeout invalid_header updating http_500 http_502 http_503 http_504"

# Requests on this port will force a cache refresh
nginx_proxy_cachebuster_port:
