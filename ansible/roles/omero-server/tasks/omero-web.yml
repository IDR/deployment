---
# tasks file for omero-web

# Check whether the web configuration needs to be regenerated

- name: omero | check server timestamp
  stat:
    follow: no
    path: "{{ omero_serverdir }}/{{ omero_server_symlink }}"
  register: omero_server_st

- name: omero | check web timestamp
  stat:
    path: /etc/nginx/conf.d/omero-web.conf
  register: omero_web_st

- name: omero | web checkupgrade
  set_fact:
    omero_web_update_needed: True
  when: (not omero_web_st.stat.exists) or (omero_web_st.stat.ctime < omero_server_st.stat.ctime)

- name: omero | web checkupgrade
  set_fact:
    omero_web_update_needed: False
  when: omero_web_update_needed is not defined

- debug:
    msg: "Web configuration needed"
  when: omero_web_update_needed

# This will generate a warning about running su, ignore it since we need to run as root for the redirection
- name: omero web | generate nginx config
  become: yes
  shell: >
    su {{ omero_system_user }} -lc
    "{{ omero_serverdir }}/{{ omero_server_symlink }}/bin/omero web config nginx"
    > /etc/nginx/conf.d/omero-web.conf
  when: (not omero_web_st.stat.exists) or (omero_upgrade and omero_web_update_needed)
  notify: restart nginx

- name: nginx | remove system defaults
  become: yes
  replace:
    backup: yes
    dest: /etc/nginx/nginx.conf
    regexp: '80\s*default_server\s*;'
    replace: '80; # default_server;'
  notify: restart nginx

- name: omero web | enable nginx
  become: yes
  service:
    enabled: yes
    name: nginx
    state: started

- name: omero web | selinux booleans
  become: yes
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  with_items:
    - httpd_read_user_content
    - httpd_enable_homedirs
  when: omero_selinux_setup

# Alternatively set httpd_can_network_connect=yes to allow all ports
- name: omero web | selinux ports
  become: yes
  seport:
    ports: "4080"
    proto: tcp
    setype: http_port_t
    state: present
  when: omero_selinux_setup
