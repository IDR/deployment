# https://github.com/glencoesoftware/omero-ms-image-region/blob/v0.5.2/src/dist/conf/config.yaml

# The port that the microservice will listen on
port: 8080

# Number of threads in the worker pool
# worker_pool_size: 1

# Configuration for request parsing limits
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxInitialLineLength-int-
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxHeaderSize-int-
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxChunkSize-int-
#  * https://netty.io/4.0/api/io/netty/handler/codec/http/HttpRequestDecoder.html#HttpRequestDecoder--
# max-initial-line-length: 4096
# max-header-size: 8192
# max-chunk-size: 8192
# Max number of channels to allow per request
max-active-channels: 6

# OMERO server that the microservice will communicate with (as a client)
omero:
  host: "{{ omero_host_ip }}"
  # integer
  port: 4064

# Copy of the OMERO server configuration which will be reused
# All values must be strings
omero.server:
  omero.data.dir: /data/OMERO
  omero.db.host: "{{ omero_db_host_ansible }}"
  omero.db.name: "{{ omero_server_dbname }}"
  omero.db.port: "5432"
  omero.db.user: "{{ omero_server_dbuser }}"
  omero.db.pass: "{{ omero_server_dbpassword }}"
  # Needed because LUTs are stored here
  omero.script_repo_root: /opt/omero/server/OMERO.server/lib/scripts/
  omero.pixeldata.max_tile_length: "2048"

# OMERO.web configuration
omero.web:
  # see group_vars/omero-hosts.yml
  session_cookie_name: "sessionid_{{ idr_environment | default('idr') }}"

# Information about the session store.
session-store:
  #type is either "postgres" or "redis"
  type: redis
  #synchronicity is either "sync" or "async"
  synchronicity: async
  #uri for either postgres db or redis
  # * https://jdbc.postgresql.org/documentation/80/connect.html
  # * https://github.com/lettuce-io/lettuce-core/wiki/Redis-URI-and-connection-details
  # uri: "jdbc:postgresql://database:5432/omero?user=omero&password=omero"
  # Currently each omero node runs its own OMERO.server, OMERO.web, Redis
  uri: "redis://{{ omero_host_ip }}:6379/0"

# Configuration for zipkin http tracing
# http-tracing:
#   enabled: true
#   zipkin-url: "http://localhost:9411/api/v2/spans"

# Enable JMX Prometheus Metrics
jmx-metrics:
  enabled: true

# Enable Vertx Prometheus Metrics
vertx-metrics:
  enabled: true

# The string to be used as the Cache-Control header provided in responses
# cache-control-header: "private, max-age=3600"
